// Mocks generated by Mockito 5.4.2 from annotations
// in tvseries/test/presentation/provider/tv_series_list_notifier_test.dart.
// Do not manually edit this file.

// ignore_for_file: no_leading_underscores_for_library_prefixes
import 'dart:async' as _i4;

import 'package:core/core.dart' as _i5;
import 'package:dartz/dartz.dart' as _i3;
import 'package:mockito/mockito.dart' as _i1;
import 'package:tvseries/tvseries.dart' as _i2;

// ignore_for_file: type=lint
// ignore_for_file: avoid_redundant_argument_values
// ignore_for_file: avoid_setters_without_getters
// ignore_for_file: comment_references
// ignore_for_file: implementation_imports
// ignore_for_file: invalid_use_of_visible_for_testing_member
// ignore_for_file: prefer_const_constructors
// ignore_for_file: unnecessary_parenthesis
// ignore_for_file: camel_case_types
// ignore_for_file: subtype_of_sealed_class

class _FakeTVSeriesRepository_0 extends _i1.SmartFake
    implements _i2.TVSeriesRepository {
  _FakeTVSeriesRepository_0(
    Object parent,
    Invocation parentInvocation,
  ) : super(
          parent,
          parentInvocation,
        );
}

class _FakeEither_1<L, R> extends _i1.SmartFake implements _i3.Either<L, R> {
  _FakeEither_1(
    Object parent,
    Invocation parentInvocation,
  ) : super(
          parent,
          parentInvocation,
        );
}

/// A class which mocks [GetAirTodayTVSeries].
///
/// See the documentation for Mockito's code generation for more information.
class MockGetAirTodayTVSeries extends _i1.Mock
    implements _i2.GetAirTodayTVSeries {
  MockGetAirTodayTVSeries() {
    _i1.throwOnMissingStub(this);
  }

  @override
  _i2.TVSeriesRepository get repository => (super.noSuchMethod(
        Invocation.getter(#repository),
        returnValue: _FakeTVSeriesRepository_0(
          this,
          Invocation.getter(#repository),
        ),
      ) as _i2.TVSeriesRepository);

  @override
  _i4.Future<_i3.Either<_i5.Failure, List<_i2.TVSeries>>> execute() =>
      (super.noSuchMethod(
        Invocation.method(
          #execute,
          [],
        ),
        returnValue:
            _i4.Future<_i3.Either<_i5.Failure, List<_i2.TVSeries>>>.value(
                _FakeEither_1<_i5.Failure, List<_i2.TVSeries>>(
          this,
          Invocation.method(
            #execute,
            [],
          ),
        )),
      ) as _i4.Future<_i3.Either<_i5.Failure, List<_i2.TVSeries>>>);
}

/// A class which mocks [GetTopRatedTVSeries].
///
/// See the documentation for Mockito's code generation for more information.
class MockGetTopRatedTVSeries extends _i1.Mock
    implements _i2.GetTopRatedTVSeries {
  MockGetTopRatedTVSeries() {
    _i1.throwOnMissingStub(this);
  }

  @override
  _i2.TVSeriesRepository get repository => (super.noSuchMethod(
        Invocation.getter(#repository),
        returnValue: _FakeTVSeriesRepository_0(
          this,
          Invocation.getter(#repository),
        ),
      ) as _i2.TVSeriesRepository);

  @override
  _i4.Future<_i3.Either<_i5.Failure, List<_i2.TVSeries>>> execute() =>
      (super.noSuchMethod(
        Invocation.method(
          #execute,
          [],
        ),
        returnValue:
            _i4.Future<_i3.Either<_i5.Failure, List<_i2.TVSeries>>>.value(
                _FakeEither_1<_i5.Failure, List<_i2.TVSeries>>(
          this,
          Invocation.method(
            #execute,
            [],
          ),
        )),
      ) as _i4.Future<_i3.Either<_i5.Failure, List<_i2.TVSeries>>>);
}

/// A class which mocks [GetPopularTVSeries].
///
/// See the documentation for Mockito's code generation for more information.
class MockGetPopularTVSeries extends _i1.Mock
    implements _i2.GetPopularTVSeries {
  MockGetPopularTVSeries() {
    _i1.throwOnMissingStub(this);
  }

  @override
  _i2.TVSeriesRepository get repository => (super.noSuchMethod(
        Invocation.getter(#repository),
        returnValue: _FakeTVSeriesRepository_0(
          this,
          Invocation.getter(#repository),
        ),
      ) as _i2.TVSeriesRepository);

  @override
  _i4.Future<_i3.Either<_i5.Failure, List<_i2.TVSeries>>> execute() =>
      (super.noSuchMethod(
        Invocation.method(
          #execute,
          [],
        ),
        returnValue:
            _i4.Future<_i3.Either<_i5.Failure, List<_i2.TVSeries>>>.value(
                _FakeEither_1<_i5.Failure, List<_i2.TVSeries>>(
          this,
          Invocation.method(
            #execute,
            [],
          ),
        )),
      ) as _i4.Future<_i3.Either<_i5.Failure, List<_i2.TVSeries>>>);
}

/// A class which mocks [GetOnTheAirTVSeries].
///
/// See the documentation for Mockito's code generation for more information.
class MockGetOnTheAirTVSeries extends _i1.Mock
    implements _i2.GetOnTheAirTVSeries {
  MockGetOnTheAirTVSeries() {
    _i1.throwOnMissingStub(this);
  }

  @override
  _i2.TVSeriesRepository get repository => (super.noSuchMethod(
        Invocation.getter(#repository),
        returnValue: _FakeTVSeriesRepository_0(
          this,
          Invocation.getter(#repository),
        ),
      ) as _i2.TVSeriesRepository);

  @override
  _i4.Future<_i3.Either<_i5.Failure, List<_i2.TVSeries>>> execute() =>
      (super.noSuchMethod(
        Invocation.method(
          #execute,
          [],
        ),
        returnValue:
            _i4.Future<_i3.Either<_i5.Failure, List<_i2.TVSeries>>>.value(
                _FakeEither_1<_i5.Failure, List<_i2.TVSeries>>(
          this,
          Invocation.method(
            #execute,
            [],
          ),
        )),
      ) as _i4.Future<_i3.Either<_i5.Failure, List<_i2.TVSeries>>>);
}
